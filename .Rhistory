533088 / 4797792
dat4_pad %>% addExcludeColumns %>% pull(isPracticeTrial) %>% !.
dat4_pad %>% addExcludeColumns %>% pull(isPracticeTrial) %>% !. %>% ssum
dat4_pad %>% addExcludeColumns %>% pull(isPracticeTrial) %>% !. %>% sum
dat4_pad %>% addExcludeColumns %>% pull(isPracticeTrial) %>% !(.) %>% sum
dat4_pad %>% addExcludeColumns %>% pull(isPracticeTrial) %>% ! %>% sum
dat4_pad %>% addExcludeColumns %>% pull(isPracticeTrial) %>% !
dat4_pad %>% addExcludeColumns %>% pull(isPracticeTrial) %>% !()
dat4_pad %>% addExcludeColumns %>% pull(isPracticeTrial) %>% not %>% sum
dat4_pad %>% addExcludeColumns %>% group_by(isPracticeTrial) %>% summarize(count = n())
dat4_pad %>%
addExcludeColumns %>%
exclude_practice %>%
exclude_inc_sel %>%
exclude_inc_dig %>%
exclude_kbd_sel %>%
exclude_bad_sub %>%
bin_prop(NoIA = 5, BinSize = 20, SamplingRate = 500) %>%
# Select just the columns you want
select(
Subject,
Item,
starts_with("IA"),
Event,
TRIAL_INDEX,
condition,
target,
distractor,
filler_1,
filler_2,
load,
critical,
Time) %>%
# Order the data by Subject, Trial, and Time
arrange(Subject, TRIAL_INDEX, Time) %T>%
(. %>% select(everything(), IA_1_P) %>% write.csv(file="./mcmurray-data/target-correct-padded-data.csv")) %>%
(. %>% select(everything(), IA_2_P) %>% write.csv(file="./mcmurray-data/competitor-correct-padded-data.csv"))
View(trial_stats)
View(trial_stats %>% addExcludeColumns)
trial_stats <- merge(
x  = dat3 %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
TrialSampleLength = n(),
TrialLength = max(Time)
) %>%
ungroup,
y  = dat3 %>% findSelections %>% addExcludeColumns,
by = c("Subject", "TRIAL_INDEX")
) %>%
mutate(SelectionTime = Time)
View(trial_stats %>% addExcludeColumns)
View(trial_stats)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
gsub("([ab])", "\\1_\\1_", "abc and ABC")
gsub(".*([ab]),*", "\\1_\\1_", "abc and ABC")
gsub(".*([ab]).*", "\\1_\\1_", "abc and ABC")
gsub(".*(([ab])(.*))*", "\\1_\\1_", "abc and ABC")
gsub(".*(([ab])(.*))*", "\\2_\\1_", "abc and ABC")
gsub(".*([ab])(.*)", "\\2_\\1_", "abc and ABC")
gsub(".*([ab])(.*)", "\\1_\\1_", "abc and ABC")
gsub("([ab])", "\\1_\\1_", "abc and ABC")
sub("([ab])", "\\1_\\1_", "abc and ABC")
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
View(dat4 %>% findTouches)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
View(dat4 %>% findTouches)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
View(dat4 %>% findTouches)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
View(dat4 %>% findTouches)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_if(contains("Time"), add_prefix("Selection"))
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_if(contains("Time"), function(t) paste("Selection", t, sep=""))
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_if(contains("Time"), function(t) paste("Selection", t, sep=""))
summary(dat3 %>% findSelections %>% addExcludeColumns)
summary(dat3 %>% findSelections %>% addExcludeColumns %>% select(contains("Time")))
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_at("Time" %in% vars(), function(t) paste("Selection", t, sep=""))
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_at(vars()["Time" %in% vars()], function(t) paste("Selection", t, sep=""))
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_at(vars["Time" %in% vars], function(t) paste("Selection", t, sep=""))
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_at(vars()["Time" %in% vars(), ], function(t) paste("Selection", t, sep=""))
selections <- dat3 %>% findSelections %>% addExcludeColumns %>%vars()["Time" %in% vars(), ]
selections <- dat3 %>% findSelections %>% addExcludeColumns %>%vars()
View(selections)
dat3 %>% findSelections %>% addExcludeColumns %>%vars()
dat3 %>% findSelections %>% addExcludeColumns %>%vars
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_at(vars(contains("Time")), function(t) paste("Selection", t, sep=""))
View(selections)
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_at(vars(contains("Time")), function(t) paste("Selection.", t, sep=""))
touches <- dat3 %>% findTouches %>% select(Subject, TRIAL_INDEX, contains("Time")) %>% rename_at(vars(contains("Time")), function(t) paste("Touch", t, sep=""))
selections <- dat3 %>% findSelections %>% addExcludeColumns %>% rename_at(vars(contains("Time")), function(t) paste("Selection.", t, sep=""));
touches <- dat3 %>% findTouches %>% select(Subject, TRIAL_INDEX, contains("Time")) %>% rename_at(vars(contains("Time")), function(t) paste("Touch.", t, sep=""));
trial_stats <- dat3 %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
TrialSampleLength = n(),
TrialLength = max(Time)
) %>%
ungroup %>%
merge(y = selections, by = c("Subject", "TRIAL_INDEX")) %>%
merge(y = touches, by = c("Subject", "TRIAL_INDEX"));
View(trial_stats)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
dat4 <- merge(
x = dat3,
y = trial_stats %>% select(Subject, TRIAL_INDEX, TrialLength, TrialSampleLength, Selection.Time, Touch.Time),
by = c("Subject", "TRIAL_INDEX"),
all = T
)
start_val <- -200
end_val <- 3500
dat4_pad <- dat4 %>%
arrange(as.numeric(Time)) %>%
trim_to_selection %>%
pad_trials(start_val = start_val, end_val = end_val)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
dat4 <- merge(
x = dat3,
y = dat3 %>% collect_trial_stats %>% select(Subject, TRIAL_INDEX, TrialLength, TrialSampleLength, Selection.Time, Touch.Time),
by = c("Subject", "TRIAL_INDEX"),
all = T
)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
start_val <- -200
end_val <- 3500
dat4_pad <- dat4 %>%
arrange(Subject, TRIAL_INDEX, as.numeric(Time)) %>%
trim_to_selection %>%
pad_trials(start_val = start_val, end_val = end_val)
dat4_pad %>% group_vars()
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>%
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
)
start_val <- -200
end_val <- 3500
dat4_pad <- dat4 %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX), as.numeric(Time)) %>%
trim_to_selection %>%
pad_trials(start_val = start_val, end_val = end_val)
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
)
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>% group_vars
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
)
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>% ungroup
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>%
ungroup %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX), as.numeric(Time)) %>%
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>%
ungroup %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX), as.numeric(Time))
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>%
ungroup %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX))
#dat4_pad %>% group_vars()
dat4_pad %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>%
filter(Subject == "100")
dat4_pad %>%
filter(Subject == "100")
dat4_pad %>%
filter(Subject == 100)
dat4 %>%
filter(Subject == 100)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
start_val <- -200
end_val <- 3500
dat4_pad <- dat4 %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX), as.numeric(Time)) %>%
trim_to_selection %>%
pad_trials(start_val = start_val, end_val = end_val)
dat4_pad %>%
filter(Subject == 100)
dat4_pad %>% varss
dat4_pad %>% vars
dat4_pad %>% vars()
dat4_pad %>% select(vars(-IA_ID))
dat4_pad %>% vars(-IA_ID)
dat4_pad %>% select_at(vars(-IA_ID))
dat4_pad %>% select_at(vars(-IA_ID), IA_ID)
dat4_pad %>% select_at(vars(-IA_ID) + IA_ID)
dat4_pad %>% select(everything(-IA_ID), IA_ID)
dat4_pad %>% select(everything()-IA_ID, IA_ID)
dat4_pad %>%
addExcludeColumns %>%
exclude_inc_sel %>%
exclude_inc_dig %>%
exclude_kbd_sel %>%
exclude_bad_sub %>%
bin_prop(NoIA = 5, BinSize = 20, SamplingRate = 500) %>%
# Select just the columns you want
select(
Subject,
Item,
starts_with("IA"),
Event,
TRIAL_INDEX,
condition,
target,
distractor,
filler_1,
filler_2,
load,
critical,
Time) %>%
# Order the data by Subject, Trial, and Time
arrange(Subject, TRIAL_INDEX, Time) %T>%
(. %>% select(-IA_1_P, everything()) %>% write.csv(file="./mcmurray-data/target-correct-padded-data.csv")) %>%
(. %>% select(-IA_3_P, everything()) %>% write.csv(file="./mcmurray-data/competitor-correct-padded-data.csv"));
#dat4_pad %>% group_vars()
dat4_pad %>%
filter(Subject == 100) %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>%
ungroup %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX))
#dat4_pad %>% group_vars()
dat4_pad %>%
#filter(Subject == 100) %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>%
ungroup %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX))
binned_temp <- dat4_pad %>%
addExcludeColumns %>%
exclude_practice %>%
exclude_inc_sel %>%
exclude_inc_dig %>%
exclude_kbd_sel %>%
exclude_bad_sub %>%
bin_prop(NoIA = 5, BinSize = 20, SamplingRate = 500)
plot(1, binned_temp$NSamples)
plot(1:314340, binned_temp$NSamples)
max(binned_temp$NSamples)
sum(binned_temp$NSamples)
mean(binned_temp$NSamples)
sum(binned_temp$NSamples > 10)
len(binned_temp$NSamples > 10)
length(binned_temp$NSamples > 10)
87083 / 314340
View(binned_temp)
View(binned_temp)
dat4_pad %>%
#filter(Subject == 100) %>%
group_by(Time) %>%
summarize(
nsamples = n()#,
#length = last(Time),
#first_idx = first(SAMPLE_INDEX),
#last_idx = last(SAMPLE_INDEX),
#last_fix = last(IA_ID),
#Selection.Time = last(Selection.Time),
#Touch.Time = last(Touch.Time)
)# %>%
dat4_pad %>%
#filter(Subject == 100) %>%
addExcludeColumns %>%
exclude_practice %>%
exclude_inc_sel %>%
exclude_inc_dig %>%
exclude_kbd_sel %>%
exclude_bad_sub %>%
group_by(Time) %>%
summarize(
nsamples = n()#,
#length = last(Time),
#first_idx = first(SAMPLE_INDEX),
#last_idx = last(SAMPLE_INDEX),
#last_fix = last(IA_ID),
#Selection.Time = last(Selection.Time),
#Touch.Time = last(Touch.Time)
)# %>%
dat4_pad %>%
#filter(Subject == 100) %>%
addExcludeColumns %>%
exclude_practice %>%
exclude_inc_sel %>%
exclude_inc_dig %>%
exclude_kbd_sel %>%
exclude_bad_sub %>%
group_by(Time) %>%
summarize(
nsamples = n()#,
#length = last(Time),
#first_idx = first(SAMPLE_INDEX),
#last_idx = last(SAMPLE_INDEX),
#last_fix = last(IA_ID),
#Selection.Time = last(Selection.Time),
#Touch.Time = last(Touch.Time)
) %>%
sum(. != 1690)
View(trial_stats)
View(trial_stats %>% filter(Correct) %>% addTimeRanks)
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
source('~/dev/CANlab-IDC/gal-matan-analysis/./functions.R')
if(sum(is(try(find.package("knitr"), silent = T)) == "try-error")) install.packages("knitr", "rmarkdown")
library("knitr")
if(sum(is(try(find.package("tidyverse"), silent = T)) == "try-error")) install.packages("tidyverse")
library("tidyverse")
if(sum(is(try(find.package("zoo"), silent = T)) == "try-error")) install.packages("zoo")
library("zoo")
#if(sum(is(try(find.package("devtools"), silent = T)) == "try-error")) install.packages("devtools")
#library("devtools")
#
# if(sum(is(try(find.package("ggTimeSeries"), silent = T)) == "try-error")) devtools::install_github('Ather-Energy/ggTimeSeries')
# library("ggTimeSeries")
if(sum(is(try(find.package("padr"), silent = T)) == "try-error")) install.packages("padr")
library("padr")
if(sum(is(try(find.package("lambda.r"), silent = T)) == "try-error")) install.packages("lambda.r")
library("lambda.r")
if(sum(is(try(find.package("VWPre"), silent = T)) == "try-error")) install.packages("VWPre")
library("VWPre")
if(sum(is(try(find.package("lme4"), silent = T)) == "try-error")) install.packages("lme4")
library("lme4")
# replace the string below with your desired working directory
setwd("~/dev/CANlab-IDC/gal-matan-analysis/")
source("./functions.R", local = T, echo = F)
dat4_pad %>%
#filter(Subject == 100) %>%
#addExcludeColumns %>%
#exclude_practice %>%
#exclude_inc_sel %>%
#exclude_inc_dig %>%
#exclude_kbd_sel %>%
#exclude_bad_sub %>%
group_by(Time) %>%
summarize(ns = n()) %>%
filter(ns != 1)
dat4_pad %>%
#filter(Subject == 100) %>%
group_by(Subject, TRIAL_INDEX) %>%
summarize(
nsamples = n(),
length = last(Time),
first_idx = first(SAMPLE_INDEX),
last_idx = last(SAMPLE_INDEX),
last_fix = last(IA_ID),
Selection.Time = last(Selection.Time),
Touch.Time = last(Touch.Time)
) %>%
ungroup %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX));
start_val <- -200
end_val <- 3500
dat4_pad <- dat4 %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX), as.numeric(Time)) %>%
trim_to_selection %>%
pad_trials(start_val = start_val, end_val = end_val, .fill_type = "Target")
dat4_pad_locf <- dat4 %>%
arrange(as.numeric(Subject), as.numeric(TRIAL_INDEX), as.numeric(Time)) %>%
trim_to_selection %>%
pad_trials(start_val = start_val, end_val = end_val, .fill_type = "LOCF")
if(sum(is(try(find.package("ggedit"), silent = T)) == "try-error")) install.packages("ggedit")
#library("ggedit")
if(sum(is(try(find.package("gridExtra"), silent = T)) == "try-error")) install.packages("gridExtra")
#library("gridExtra")
if(sum(is(try(find.package("ggalt"), silent = T)) == "try-error")) install.packages("ggalt")
if(sum(is(try(find.package("hrbrthemes"), silent = T)) == "try-error")) install.packages("hrbrthemes")
if(sum(is(try(find.package("ggalt"), silent = T)) == "try-error")) install.packages("ggalt")
packrat::init()
if(sum(is(try(find.package("ggedit"), silent = T)) == "try-error")) install.packages("ggedit")
library("ggedit")
if(sum(is(try(find.package("gridExtra"), silent = T)) == "try-error")) install.packages("gridExtra")
library("gridExtra")
if(sum(is(try(find.package("ggalt"), silent = T)) == "try-error")) install.packages("ggalt")
library("ggalt")
if(sum(is(try(find.package("proj4"), silent = T)) == "try-error")) install.packages("proj4")
library("proj4")
if(sum(is(try(find.package("ggalt"), silent = T)) == "try-error")) install.packages("ggalt")
library("ggalt")
geom_horizon
library("ggalt")
ggalt
find.package('ggalt')
package_version('ggalt')
if(sum(is(try(find.package("ggalt"), silent = T)) == "try-error")) install.packages("ggalt")
library("ggalt")
devtools::install_github("hrbrmstr/ggalt")
library("ggalt")
library.dynam.unload('ggTimeSseriess')
library.dynam.unload('ggTimeSeries')
unload('ggTimeSeries')
View(dat4_pad_locf)
