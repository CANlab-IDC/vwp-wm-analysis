targetfix_m.reml.3 <- lmer(IA_1_P ~ (ot1+ot2+ot3)*condition
+ (ot1+ot2+ot3)*load*wmcap
+ (1+ot1+ot2+ot3 | Subject)
+ (1+ot1 | Subject:condition)
+ (1+ot1 | Subject:load),
control = lmerControl(optimizer="bobyqa"),
data=scaled_targfix_dat,
REML=T)
relgrad <- with(targetfix_m.reml.3@optinfo$derivs,solve(Hessian,gradient))
max(pmin(abs(relgrad),abs(targetfix_m.reml.3@optinfo$derivs$gradient)))
scaled_targfix_dat$mfit <- fitted(targetfix_m.reml.3);
ggplot(scaled_targfix_dat, aes(Time, IA_1_P, color=wmcap)) + facet_wrap(~ load + condition) +
theme_minimal() +
stat_summary(fun.y=mean, geom="point") +
stat_summary(aes(y=mfit), fun.y=mean, geom="line") +
labs(y="Fixation Proportion", x="Time since word onset (ms)") +
scale_color_manual(values=c("red", "blue")) +
xlim(0, 3000)
targetfix_m.nm.3 <- lmer(IA_1_P ~ (ot1+ot2+ot3)*condition
+ (ot1+ot2+ot3)*load*wmcap
+ (1+ot1+ot2+ot3 | Subject)
+ (1+ot1 | Subject:condition)
+ (1+ot1 | Subject:load),
control = lmerControl(optimizer="Nelder_Mead"),
data=scaled_targfix_dat,
REML=T)
check_model_grad <- function(mod) {
relgrad <- with(mod@optinfo$derivs,solve(Hessian,gradient));
return (max(pmin(abs(relgrad),abs(mod@optinfo$derivs$gradient))));
}
check_model_grad(targetfix_m.nm.3)
targetfix_m.nm.3 <- lmer(IA_1_P ~ (ot1+ot2+ot3)*condition
+ (ot1+ot2+ot3)*load*wmcap
+ (1+ot1+ot2+ot3 | Subject)
+ (1+ot1 | Subject:condition)
+ (1+ot1 | Subject:load),
control = lmerControl(optimizer="Nelder_Mead", optCtrl = c(maxfun=25000)),
data=scaled_targfix_dat,
REML=T)
targetfix_m.nm.3 <- lmer(IA_1_P ~ (ot1+ot2+ot3)*condition
+ (ot1+ot2+ot3)*load*wmcap
+ (1+ot1+ot2+ot3 | Subject)
+ (1+ot1 | Subject:condition)
+ (1+ot1 | Subject:load),
control = lmerControl(optimizer="Nelder_Mead", maxfun=25000),
data=scaled_targfix_dat,
REML=T)
targetfix_m.nm.3 <- lmer(IA_1_P ~ (ot1+ot2+ot3)*condition
+ (ot1+ot2+ot3)*load*wmcap
+ (1+ot1+ot2+ot3 | Subject)
+ (1+ot1 | Subject:condition)
+ (1+ot1 | Subject:load),
verbose=1,
control = lmerControl(optimizer="Nelder_Mead", optCtrl =list(maxfun=25000)),
data=scaled_targfix_dat,
REML=T)
check_model_grad(targetfix_m.nm.3)
targetfix_m.nm.3 <- lmer(IA_1_P ~ (ot1+ot2+ot3)*condition
+ (ot1+ot2+ot3)*load*wmcap
+ (1+ot1+ot2+ot3 | Subject)
+ (1+ot1+ot2+ot3 | Subject/condition:load),
verbose=1,
control = lmerControl(optimizer="Nelder_Mead", optCtrl =list(maxfun=25000)),
data=scaled_targfix_dat,
REML=T)
View(scaled_targfix_dat)
check_model_grad(targetfix_m.nm.3)
scaled_targfix_dat$mfit <- fitted(targetfix_m.nm.3);
ggplot(scaled_targfix_dat, aes(Time, IA_1_P, color=wmcap)) + facet_wrap(~ load + condition) +
theme_minimal() +
stat_summary(fun.y=mean, geom="point") +
stat_summary(aes(y=mfit), fun.y=mean, geom="line") +
labs(y="Fixation Proportion", x="Time since word onset (ms)") +
scale_color_manual(values=c("red", "blue")) +
xlim(0, 3000)
targetfix_m.full <- lmer(IA_1_P ~ (Time + I(Time^2) + I(Time^3))*(condition + load*wmcap)
+ (1+Time + I(Time^2) + I(Time^3) | Subject/(condition:load)),
verbose=1,
control = lmerControl(optimizer="Nelder_Mead", optCtrl =list(maxfun=25000)),
data=scaled_targfix_dat,
REML=T)
targetfix_m.full <- lmer(IA_1_P ~ (Time + I(Time^2) + I(Time^3))*condition
+ (Time + I(Time^2) + I(Time^3))*load*wmcap
+ (1+Time + I(Time^2) + I(Time^3) | Subject/condition:load),
verbose=1,
control = lmerControl(optimizer="Nelder_Mead", optCtrl =list(maxfun=25000)),
data=scaled_targfix_dat,
REML=T)
findSelections <- function(x) {
return (x[grepl("SELECTION", x$SAMPLE_MESSAGE), c("Subject","TRIAL_INDEX","Time")])
}
findSelections(dat4)
findSelections <- function(x) {
return (x[grepl("SELECTION", x$SAMPLE_MESSAGE), c("Subject","TRIAL_INDEX","Time","SAMPLE_MESSAGE")])
}
selections <- findSelections(dat4)
View(selections)
findSelections <- function(x) {
return (x %>%
filter(., grep("SELECTION", SAMPLE_MESSAGE)) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE) %>%
mutate(.,Correct = grep("SELECTION_CORRECT", SAMPLE_MESSAGE)))
}
findSelections <- function(x) {
return (x %>%
filter(., grep("SELECTION", SAMPLE_MESSAGE)) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE) %>%
mutate(.,Correct = grep("SELECTION_CORRECT", SAMPLE_MESSAGE)))
}
selections <- findSelections(dat4)
findSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION", SAMPLE_MESSAGE)) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE) %>%
mutate(.,Correct = grep("SELECTION_CORRECT", SAMPLE_MESSAGE)))
}
selections <- findSelections(dat4)
findSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION", SAMPLE_MESSAGE)) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE) %>%
mutate(.,Correct = grepl("SELECTION_CORRECT", SAMPLE_MESSAGE)))
}
selections <- findSelections(dat4)
View(selections)
summary(selections)
plot(~selections$Time)
plot(selections$Time~)
plot(selections$Time~1)
plot(selections$Time~0:max(selections$Time))
plot(~selections$Time)
plot(selections$Time~)
plot(selections$Time~1)
selections <- selections %>% arrange(.,Time)
plot(selections$Time~)
plot(selections$Time~1)
plot(filterselections$Time~1)
plot(filter(selections,Correct)$Time~1)
View(selections)
percent_rank(selections)
percent_rank(selections$Time)
findSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION", SAMPLE_MESSAGE)) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE) %>%
mutate(.,
Correct = grepl("SELECTION_CORRECT", SAMPLE_MESSAGE),
Time.pct_rk = percent_rank(Time),
Time.min_rk = min_rank(Time)
)
)
}
findSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION", SAMPLE_MESSAGE)) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE) %>%
mutate(.,
Correct = grepl("SELECTION_CORRECT", SAMPLE_MESSAGE),
Time.pct_rk = percent_rank(Time),
Time.min_rk = min_rank(Time)
) %>%
arrange(., Time)
)
}
selections <- findSelections(dat4)
View(selections)
ggplot(selections, aes(Time.min_rk,Time,colors=c('Correct')))
ggplot(selections, aes(Time.min_rk,Time,color=Correct))
ggplot(selections, aes(Time.min_rk,Time,color=Correct)) + stat_summary(fun.data=x, geom="pointrange")
ggplot(selections, aes(Time.min_rk,Time,color=Correct)) + theme_bw() + scale_color_manual(values=c("red", "blue"))
ggplot(selections, aes(Time.min_rk,Time,color=Correct)) + theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(selections %>% filter(.,Correct), aes(Time.min_rk,Time,color=Correct)) + theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
findCorrectSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION_CORRRECT", SAMPLE_MESSAGE)) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE) %>%
mutate(.,
Time.pct_rk = percent_rank(Time),
Time.min_rk = min_rank(Time)
) %>%
arrange(., Time)
)
}
correct_selections <- findCorrectSelections(dat4)
findCorrectSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION_CORRECT", SAMPLE_MESSAGE)) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE) %>%
mutate(.,
Time.pct_rk = percent_rank(Time),
Time.min_rk = min_rank(Time)
) %>%
arrange(., Time)
)
}
correct_selections <- findCorrectSelections(dat4)
View(correct_selections)
View(dat4 %>% filter(., grepl("KEYBD_SELECT", SAMPLE_MESSAGE)))
findCorrectSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION_CORRECT", SAMPLE_MESSAGE)) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE,condition,load,wmcap) %>%
mutate(.,
Time.pct_rk = percent_rank(Time),
Time.min_rk = min_rank(Time)
) %>%
arrange(., Time)
)
}
View(correct_selections)
correct_selections <- findCorrectSelections(dat4)
View(correct_selections)
ggplot(selecorrect_selections, aes(Time.min_rk,Time,color=wmcap)) + theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=wmcap)) + theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=load)) + facet_wrap(~wmcap)+  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=load)) + facet_wrap(wmcap~)+  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=load)) + facet_wrap(~wmcap) +  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=load)) + facet_wrap(wmcap) +  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=load)) + facet_wrap(~ wmcap) +  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=load)) + facet_wrap(~ as.numeric(wmcap)) +  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=load)) + facet_wrap(~ as.factor(wmcap)) +  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=load)) +  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=as.factor(load))) + facet_wrap(~ wmcap) +  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=condition)) + facet_wrap(~ wmcap * as.factor(load)) +  theme_bw() + scale_color_manual(values=c("red", "blue")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=condition)) + facet_wrap(~ wmcap * as.factor(load)) +  theme_bw() + scale_color_manual(values=c("red", "blue", "yellow")) + geom_point()
ggplot(correct_selections, aes(Time.min_rk,Time,color=condition)) + facet_wrap(~ wmcap * as.factor(load)) +  theme_bw() + scale_color_manual(values=c("red", "blue", "green")) + geom_point()
ggplot(correct_selections %>% filter(.,condition != 0), aes(Time.min_rk,Time,color=condition)) + facet_wrap(~ wmcap * as.factor(load)) +  theme_bw() + scale_color_manual(values=c("red", "blue", "green")) + geom_point()
findCorrectCritSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION_CORRECT", SAMPLE_MESSAGE) & condition != 0) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE,condition,load,wmcap) %>%
mutate(.,
Time.pct_rk = percent_rank(Time),
Time.min_rk = min_rank(Time)
) %>%
arrange(., Time)
)
}
correct_crit_selections <- findCorrectCritSelections(dat4)
ggplot(correct_crit_selections, aes(Time.min_rk,Time,color=condition)) + facet_wrap(~ wmcap * as.factor(load)) +  theme_bw() + scale_color_manual(values=c("red", "blue", "green")) + geom_point()
View(correct_crit_selections)
library('reshape2')
melty_dat <- melt(dat3, id.vars=c("Subject","TRIAL_INDEX","Time"))
View(argetFixPForMcMurrayDat)
View(melty_dat)
colnames(dat3)
keepUsefulCols <- select(.,
Subject,
TRIAL_INDEX,
SAMPLE_INDEX,
SAMPLE_MESSAGE,
TIMESTAMP,
LAST_Position,
condition,
Item,
critical,
distractor,
filler_1,
filler_2,
load,
version,
withha_onset,
withoutha_onset,
Event,
Time,
EyeRecorded,
EyeSelected,
IA_ID,
IA_LABEL,
IA_Data
)
keepUsefulCols <- function(x) {
return (x %>% select(., Subject,
TRIAL_INDEX,
SAMPLE_INDEX,
SAMPLE_MESSAGE,
TIMESTAMP,
LAST_Position,
condition,
Item,
critical,
distractor,
filler_1,
filler_2,
load,
version,
withha_onset,
withoutha_onset,
Event,
Time,
EyeRecorded,
EyeSelected,
IA_ID,
IA_LABEL,
IA_Data
))
}
dat3_pad <- keepUsefulCols(dat3)
melty_dat <- melt(dat3_pad, id.vars=c("Subject","TRIAL_INDEX","Time"))
melty_dat <- melt(dat3_pad, id.vars=c("Subject","TRIAL_INDEX","SAMPLE_INDEX"))
install.packages('padr')
vignette(paddr)
vignette(padr)
vignette('padr')
install.packages('tidyr')
selections$Time[-1,]
selections$Time[-1]
selections$Time[1]
selections$Time[-1:]
tail(selections$Time)
last(selections$Time)
remove(dat3_pad)
dat3_pad <- dat3 %>%
group_by(., Subject, TRIAL_INDEX, TIMESTAMP) %>%
pad() %>%
fill_with_function(last)
library('padr')
library('tidyr')
dat3_pad <- dat3 %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad(by=TIMESTAMP) %>%
fill_with_function(last)
summary(dat3$TIMESTAMP)
dat3_pad <- dat3 %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad(by=Time) %>%
fill_with_function(last)
install.packages('lubridate')
library("lubridate")
date(test) < milliseconds(300)
date(x) < milliseconds(300)
date(x) <- milliseconds(300)
date(test) <- milliseconds(300)
<- date(milliseconds(300))
date(milliseconds(300))
date(dmilliseconds(300))
origin+dmilliseconds(300)
origin+milliseconds(300)
dat3_pad <- dat3 %>%
mutate(., TimeDt = origin+days(1)+milliseconds(Time))
group_by(., Subject, TRIAL_INDEX) %>%
pad(by=TimeDt,end_val = origin+days(1)+milliseconds(6500)) %>%
fill_with_function(last)
dat3_pad <- dat3 %>%
mutate(., TimeDt = origin+days(1)+milliseconds(Time)) %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad(by=TimeDt,end_val = origin+days(1)+milliseconds(6500)) %>%
fill_with_function(last)
dat3_pad <- dat3 %>%
mutate(., TimeDt = origin+days(1)+milliseconds(Time)) %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad(by="TimeDt",end_val = origin+days(1)+milliseconds(6500)) %>%
fill_with_function(last)
dat3_pad <- dat3 %>%
mutate(., TimeDt = origin+days(1)+milliseconds(Time)) %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad(by="TimeDt",interval="milliseconds",begin_val=origin+days(1)-milliseconds(200),end_val = origin+days(1)+milliseconds(6500)) %>%
fill_with_function(last)
dat3_pad <- dat3 %>%
mutate(., TimeDt = origin+days(1)+milliseconds(Time)) %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad(by="TimeDt",interval="milliseconds",start_val=origin+days(1)-milliseconds(200),end_val = origin+days(1)+milliseconds(6500)) %>%
fill_with_function(last)
dmilliseconds(200)
Date(dmilliseconds(200))
date(dmilliseconds(200))
date(dmilliseconds(200), origin=today)
as.POSIXlt.numeric(x, tz = tz(x), origin=today)
as.POSIXlt.numeric(x, tz = tz(x), origin=origin)
as.POSIXlt.numeric(dmilliseconds(200), tz = tz(x), origin=origin)
as.POSIXlt.numeric(dmilliseconds(200), origin=origin)
as.POSIXct.numeric(dmilliseconds(200), origin=origin)
as.POSIXlt.numeric(dmilliseconds(200), origin=origin, options=c("digits.secs"=5))
strptime(dmilliseconds(200), origin=origin, options=c("digits.secs"=5))
getOption('digits.secs')
setOption('digits.secs', 6)
options(digits.secs=6)
as.POSIXct.numeric(dmilliseconds(200), origin=origin)
as.POSIXct.numeric(dmilliseconds(202.20), origin=origin)
origin+days(1)+milliseconds(-200)
dat3_pad <- dat3 %>%
mutate(., TimeDt = origin+days(1)+milliseconds(Time)) %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad(by="TimeDt",interval="milliseconds",start_val=origin+days(1)-milliseconds(200),end_val = origin+days(1)+milliseconds(6500)) %>%
fill_with_function(last)
dat3_pad <- dat3 %>%
mutate(., TimeDt = origin+days(1)+milliseconds(Time)) %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad(by="TimeDt",start_val=origin+days(1)-milliseconds(200),end_val = origin+days(1)+milliseconds(6500)) %>%
fill_with_function(last)
dat3_pad <- dat3 %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad_int(Time,start_val=-200,end_val = 6500) %>%
fill_with_function(last)
dat3_pad <- dat3 %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad_int(Time,start_val=-200,end_val = 6500) %>%
fill_with_function(last)
remove(dat3_pad)
dat3_pad <- dat3 %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad_int(Time,start_val=-200,end_val = 6500) %>%
fill_with_function(last)
dat3_pad <- dat3 %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad_int(., by=Time,start_val=-200,end_val = 6500) %>%
fill_with_function(last)
dat3_pad <- dat3 %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad_int(., by=Time,start_val=-200,end_val = 6500) %>%
fill_by_function(last)
dat3_pad <- dat3 %>%
group_by(., Subject, TRIAL_INDEX) %>%
pad_int(., Time,start_val=-200,end_val = 6500) %>%
fill_by_function(last)
dat3_pad <- dat3 %>%
pad_int(., Time,start_val=-200,end_val = 6500,step=2,group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
dat3_pad <- dat3 %>% select(.,Time) %>%
pad_int(., Time,start_val=-200,end_val = 6500,step=2,group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
dat3_pad <- dat3 %>% select(.,Time,Subject,condition, wmcap, load, starts_with("IA"), TRIAL_INDEX) %>%
pad_int(., Time,start_val=-200,end_val = 6500,step=2,group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
dat3_pad <- dat3 %>% select(.,Time,Subject,condition, load, starts_with("IA"), TRIAL_INDEX) %>%
pad_int(., Time,start_val=-200,end_val = 6500,step=2,group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
dat3_pad <- dat3 %>% select(.,Time,Subject,condition, load, starts_with("IA"), TRIAL_INDEX) %>%
pad_int(., as.numeric(Time),start_val=-200,end_val = 6500,step=2,group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
dat3_pad <- dat3 %>% select(.,Time,Subject,condition, load, starts_with("IA"), TRIAL_INDEX) %>%
pad_int(., "Time",start_val=-200,end_val = 6500,step=2,group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
dat3_pad <- dat3 %>% select(.,Time,Subject,condition, load, starts_with("IA"), TRIAL_INDEX) %>%
pad_int(., "Time",start_val=-200,end_val = 6500,step=2,group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
dat3_pad <- dat3 %>%
filter(., Time<=6500) %>%
pad_int(., Time, start_val=-200, end_val = 6500, step=2, group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
dat3_pad <- dat3 %>%
filter(., Time<=6500) %>%
pad_int(., "Time", start_val=-200, end_val = 6500, step=2, group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
findCorrectCritSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION_CORRECT", SAMPLE_MESSAGE) & condition != 0) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE,IA_1_P,condition,load,wmcap) %>%
mutate(.,
Time.pct_rk = percent_rank(Time),
Time.min_rk = min_rank(Time)
) %>%
arrange(., Time)
)
}
findCorrectCritSelections(dat4)
correct_crit_selections <- findCorrectCritSelections(dat4)
View(correct_crit_selections)
dat3_pad <- dat3 %>%
filter(., Time<=5500) %>%
pad_int(., "Time", start_val=-200, end_val = 5500, step=2, group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_function(last)
dat4_pad <- bin_prop(dat3_pad, NoIA = 5, BinSize = 20, SamplingRate = 500)
correct_crit_selections <- findCorrectCritSelections(dat4_pad)
dat4_pad <- merge(x=dat4_pad, y=wmcaps, by="Subject", all=T);
correct_crit_selections <- findCorrectCritSelections(dat4_pad)
View(correct_crit_selections)
correct_crit_selections <- findCorrectCritSelections(dat4)
correct_crit_selections <- findCorrectCritSelections(dat4_pad)
View(wmcaps)
correct_crit_selections <- findCorrectCritSelections(dat4)
View(correct_crit_selections)
View(dat2)
pad_trials <- function(x) {
return (x %>%
filter(., Time<=5500) %>%
pad_int(., "Time", start_val=-200, end_val = 5500, step=2, group=c("Subject", "TRIAL_INDEX")) %>%
fill_by_value(., LEFT_INTEREST_AREA_ID, RIGHT_INTEREST_AREA_ID, value=1 ) %>%
fill_by_value(., LEFT_INTEREST_AREA_LABEL, RIGHT_INTEREST_AREA_LABEL, value="Target" ) %>%
fill_by_function(., fun=last)
);
}
dat2_pad <- pad_trials(dat2)
correct_crit_selections <- findCorrectCritSelections(dat2_pad)
findCorrectCritSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION_CORRECT", SAMPLE_MESSAGE) & condition != 0) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE,condition,load,wmcap) %>%
mutate(.,
Time.pct_rk = percent_rank(Time),
Time.min_rk = min_rank(Time)
) %>%
arrange(., Time)
)
}
correct_crit_selections <- findCorrectCritSelections(dat2_pad)
findCorrectCritSelections <- function(x) {
return (x %>%
filter(., grepl("SELECTION_CORRECT", SAMPLE_MESSAGE) & condition != 0) %>%
select(.,Subject,TRIAL_INDEX,Time,SAMPLE_MESSAGE,condition,load) %>%
mutate(.,
Time.pct_rk = percent_rank(Time),
Time.min_rk = min_rank(Time)
) %>%
arrange(., Time)
)
}
correct_crit_selections <- findCorrectCritSelections(dat2_pad)
View(correct_crit_selections)
correct_crit_selections <- findCorrectCritSelections(dat2)
View(correct_crit_selections)
savehistory("~/dev/CANlab-IDC/gal-matan-analysis/temp1.Rhistory")
